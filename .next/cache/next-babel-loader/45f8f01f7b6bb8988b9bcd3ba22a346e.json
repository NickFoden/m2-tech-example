{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/vivienneobrien/Desktop/mh2-tech-test-main/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vivienneobrien/Desktop/mh2-tech-test-main/components/detail.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport NumberFormat from \"react-number-format\";\n/* eslint-disable max-statements */\n\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { add, format } from \"date-fns\";\nimport { Button } from \"./button\";\nimport { AccountHeadline, AccountLabel, AccountSection, AccountList, InfoText, Inset, RowContainer } from \"./style\";\n\nvar subtract = function subtract(a, b) {\n  var total = a - b;\n  return total;\n};\n\nvar calculatePercentage = function calculatePercentage(a, b) {\n  var total = a / b * 100;\n  return total;\n};\n\nvar formatPercentage = function formatPercentage(a) {\n  return a + \"%\" // .float/.ceil etc think about rounding and to a specific space\n  ;\n};\n\nvar divide = function divide(a, b) {\n  var total = a / b;\n  return total;\n};\n\nvar sincePurchased = function sincePurchased(_ref) {\n  var recentValuation = _ref.recentValuation,\n      originalPurchasePrice = _ref.originalPurchasePrice;\n  var sincePurchasedPrice = subtract(recentValuation.amount, originalPurchasePrice); // subtract (take it out of busines context), separation of concerns/calculations\n  // Can also do: <NumberFormat value={sincePurchasedPrice} displayType=\"text\" thousandSeparator={true} prefix=\"Â£\" decimalScale={2} />\n\n  var sincePurchasedPriceFormatted = formatAmount(sincePurchasedPrice);\n  return sincePurchasedPriceFormatted;\n};\n\nvar sincePurchasedPercentage = function sincePurchasedPercentage(_ref2) {\n  var recentValuation = _ref2.recentValuation,\n      originalPurchasePrice = _ref2.originalPurchasePrice;\n  var sincePurchasedPrice = subtract(recentValuation.amount, originalPurchasePrice);\n  var sincePurchasedPricePercentageCalculation = calculatePercentage(sincePurchasedPrice, originalPurchasePrice);\n  var sincePurchasedPricePercentageFormatted = formatPercentage(sincePurchasedPricePercentageCalculation);\n  return sincePurchasedPricePercentageFormatted;\n};\n\nvar annualAppreciation = function annualAppreciation(_ref3) {\n  var recentValuation = _ref3.recentValuation,\n      originalPurchasePrice = _ref3.originalPurchasePrice,\n      originalPurchasePriceDate = _ref3.originalPurchasePriceDate;\n  var sincePurchasedPrice = subtract(recentValuation.amount, originalPurchasePrice);\n  var sincePurchasedPricePercentageCalculation = calculatePercentage(sincePurchasedPrice, originalPurchasePrice);\n  var currentYear = new Date().getFullYear();\n  var numberOfYearsSincePurchased = currentYear - parseInt(originalPurchasePriceDate.slice(0, 4));\n  var annualAppreciationCalculation = divide(sincePurchasedPricePercentageCalculation, numberOfYearsSincePurchased);\n  var annualAppreciationFormatted = formatPercentage(annualAppreciationCalculation);\n  return annualAppreciationFormatted;\n}; // util.js file as plain js, pass in one date and give back a new string\n// semantic: use correct attributes e.g. h1 over a span. break down html semantics the right way\n\n\nvar formatDate = function formatDate(_ref4) {\n  var originalPurchasePriceDate = _ref4.originalPurchasePriceDate;\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\"\n  }).format(originalPurchasePriceDate);\n};\n\nvar formatAmount = function formatAmount(a) {\n  {\n    new Intl.NumberFormat(\"en-GB\", {\n      style: \"currency\",\n      currency: \"GBP\",\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(a);\n  }\n  return a;\n};\n\nvar account = {\n  uid: \"65156cdc-5cfd-4b34-b626-49c83569f35e\",\n  deleted: false,\n  dateCreated: \"2020-12-03T08:55:33.421Z\",\n  currency: \"GBP\",\n  name: \"15 Temple Way\",\n  bankName: \"Residential\",\n  type: \"properties\",\n  subType: \"residential\",\n  originalPurchasePrice: 250000,\n  originalPurchasePriceDate: \"2017-09-03\",\n  recentValuation: {\n    amount: 310000,\n    status: \"good\"\n  },\n  associatedMortgages: [{\n    name: \"HSBC Repayment Mortgage\",\n    uid: \"fb463121-b51a-490d-9f19-d2ea76f05e25\",\n    currentBalance: -175000\n  }],\n  canBeManaged: false,\n  postcode: \"BS1 2AA\",\n  lastUpdate: \"2020-12-01T08:55:33.421Z\",\n  updateAfterDays: 30\n}; // state, setstate then render\n\nvar Detail = function Detail(_ref5) {\n  _s();\n\n  _objectDestructuringEmpty(_ref5);\n\n  useEffect(function () {\n    window.fetch(\"/api/account\").then(function (res) {\n      return res.json();\n    }).then(console.log);\n  }, []); // const Detail = () => {\n  // const [account, setAccount] = useState({});\n  // useEffect(() => {\n  //   axios\n  //     .get(\"../pages/api/account\")\n  //     .then((response) => setAccount(response))\n  //     .then(console.log());\n  // }, []);\n  // console.log(account)\n\n  var mortgage;\n  var lastUpdate = new Date(account.lastUpdate);\n\n  if (account.associatedMortgages.length) {\n    mortgage = account.associatedMortgages[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Inset, {\n    children: [/*#__PURE__*/_jsxDEV(AccountSection, {\n      children: [/*#__PURE__*/_jsxDEV(AccountLabel, {\n        children: \"Estimated Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(AccountHeadline, {\n        children: new Intl.NumberFormat(\"en-GB\", {\n          style: \"currency\",\n          currency: \"GBP\"\n        }).format(account.recentValuation.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(AccountList, {\n        children: [/*#__PURE__*/_jsxDEV(InfoText, {\n          children: \"Last updated \".concat(format(lastUpdate, \"do MMM yyyy\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: \"Next update \".concat(format(add(lastUpdate, {\n            days: account.updateAfterDays\n          }), \"do MMM yyyy\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AccountSection, {\n      children: [/*#__PURE__*/_jsxDEV(AccountLabel, {\n        children: \"Property details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(RowContainer, {\n        children: /*#__PURE__*/_jsxDEV(AccountList, {\n          children: [/*#__PURE__*/_jsxDEV(InfoText, {\n            children: account.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InfoText, {\n            children: account.bankName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InfoText, {\n            children: account.postcode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, _this), mortgage && /*#__PURE__*/_jsxDEV(AccountSection, {\n      children: [/*#__PURE__*/_jsxDEV(AccountLabel, {\n        children: \"Mortgage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(RowContainer // This is a dummy action\n      , {\n        onClick: function onClick() {\n          return alert(\"You have navigated to the mortgage page\");\n        },\n        children: /*#__PURE__*/_jsxDEV(AccountList, {\n          children: [/*#__PURE__*/_jsxDEV(InfoText, {\n            children: new Intl.NumberFormat(\"en-GB\", {\n              style: \"currency\",\n              currency: \"GBP\"\n            }).format(Math.abs(account.associatedMortgages[0].currentBalance))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(InfoText, {\n            children: account.associatedMortgages[0].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(AccountSection, {\n      children: [/*#__PURE__*/_jsxDEV(AccountLabel, {\n        children: \"Valuation Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(RowContainer, {\n        children: /*#__PURE__*/_jsxDEV(AccountList, {\n          children: [/*#__PURE__*/_jsxDEV(InfoText, {\n            children: [\"Purchased for\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\xA3199,500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 34\n            }, _this), \"\\xA0 on the\\xA0\", formatDate({\n              account: account\n            }), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InfoText, {\n            children: [\"Since purchase\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [sincePurchased(account), \" \", sincePurchasedPercentage(account)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InfoText, {\n            children: [\"Annual Appreciation\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: annualAppreciation(account)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button // This is a dummy action\n    , {\n      onClick: function onClick() {\n        return alert(\"You have navigated to the edit account page\");\n      },\n      children: \"Edit account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Detail, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/vivienneobrien/Desktop/mh2-tech-test-main/components/detail.js"],"names":["NumberFormat","PropTypes","React","useEffect","useState","add","format","Button","AccountHeadline","AccountLabel","AccountSection","AccountList","InfoText","Inset","RowContainer","subtract","a","b","total","calculatePercentage","formatPercentage","divide","sincePurchased","recentValuation","originalPurchasePrice","sincePurchasedPrice","amount","sincePurchasedPriceFormatted","formatAmount","sincePurchasedPercentage","sincePurchasedPricePercentageCalculation","sincePurchasedPricePercentageFormatted","annualAppreciation","originalPurchasePriceDate","currentYear","Date","getFullYear","numberOfYearsSincePurchased","parseInt","slice","annualAppreciationCalculation","annualAppreciationFormatted","formatDate","Intl","DateTimeFormat","year","month","day","style","currency","minimumFractionDigits","maximumFractionDigits","account","uid","deleted","dateCreated","name","bankName","type","subType","status","associatedMortgages","currentBalance","canBeManaged","postcode","lastUpdate","updateAfterDays","Detail","window","fetch","then","res","json","console","log","mortgage","length","days","alert","Math","abs"],"mappings":"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","sourcesContent":["import NumberFormat from \"react-number-format\";\n/* eslint-disable max-statements */\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { add, format } from \"date-fns\";\nimport { Button } from \"./button\";\n\nimport {\n  AccountHeadline,\n  AccountLabel,\n  AccountSection,\n  AccountList,\n  InfoText,\n  Inset,\n  RowContainer,\n} from \"./style\";\n\nconst subtract = (a, b) => {\n  const total = a - b;\n  return total;\n};\n\nconst calculatePercentage = (a, b) => {\n  const total = (a / b) * 100;\n  return total;\n};\n\nconst formatPercentage = (a) => {\n  return (\n    a + \"%\" // .float/.ceil etc think about rounding and to a specific space\n  );\n};\n\nconst divide = (a, b) => {\n  const total = a / b;\n  return total;\n};\n\n\n\nconst sincePurchased = ({ recentValuation, originalPurchasePrice }) => {\n  const sincePurchasedPrice = subtract(\n    recentValuation.amount,\n    originalPurchasePrice\n  ); // subtract (take it out of busines context), separation of concerns/calculations\n  // Can also do: <NumberFormat value={sincePurchasedPrice} displayType=\"text\" thousandSeparator={true} prefix=\"Â£\" decimalScale={2} />\n  const sincePurchasedPriceFormatted = formatAmount(sincePurchasedPrice)\n  return sincePurchasedPriceFormatted;\n};\n\nconst sincePurchasedPercentage = ({\n  recentValuation,\n  originalPurchasePrice,\n}) => {\n  const sincePurchasedPrice = subtract(\n    recentValuation.amount,\n    originalPurchasePrice\n  );\n  const sincePurchasedPricePercentageCalculation = calculatePercentage(\n    sincePurchasedPrice,\n    originalPurchasePrice\n  );\n  const sincePurchasedPricePercentageFormatted = formatPercentage(\n    sincePurchasedPricePercentageCalculation\n  );\n  return sincePurchasedPricePercentageFormatted;\n};\n\nconst annualAppreciation = ({\n  recentValuation,\n  originalPurchasePrice,\n  originalPurchasePriceDate,\n}) => {\n  const sincePurchasedPrice = subtract(\n    recentValuation.amount,\n    originalPurchasePrice\n  );\n  const sincePurchasedPricePercentageCalculation = calculatePercentage(\n    sincePurchasedPrice,\n    originalPurchasePrice\n  );\n\n  const currentYear = new Date().getFullYear();\n  const numberOfYearsSincePurchased =\n    currentYear - parseInt(originalPurchasePriceDate.slice(0, 4));\n\n  const annualAppreciationCalculation = divide(\n    sincePurchasedPricePercentageCalculation,\n    numberOfYearsSincePurchased\n  );\n  const annualAppreciationFormatted = formatPercentage(\n    annualAppreciationCalculation\n  );\n  return annualAppreciationFormatted;\n};\n\n// util.js file as plain js, pass in one date and give back a new string\n// semantic: use correct attributes e.g. h1 over a span. break down html semantics the right way\nconst formatDate = ({ originalPurchasePriceDate }) => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(originalPurchasePriceDate);\n};\n\nconst formatAmount = (a) => {\n  {\n    new Intl.NumberFormat(\"en-GB\", {\n      style: \"currency\",\n      currency: \"GBP\",\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(a);\n  }\n  return a\n}\n\nconst account = {\n  uid: \"65156cdc-5cfd-4b34-b626-49c83569f35e\",\n  deleted: false,\n  dateCreated: \"2020-12-03T08:55:33.421Z\",\n  currency: \"GBP\",\n  name: \"15 Temple Way\",\n  bankName: \"Residential\",\n  type: \"properties\",\n  subType: \"residential\",\n  originalPurchasePrice: 250000,\n  originalPurchasePriceDate: \"2017-09-03\",\n  recentValuation: { amount: 310000, status: \"good\" },\n  associatedMortgages: [\n    {\n      name: \"HSBC Repayment Mortgage\",\n      uid: \"fb463121-b51a-490d-9f19-d2ea76f05e25\",\n      currentBalance: -175000,\n    },\n  ],\n  canBeManaged: false,\n  postcode: \"BS1 2AA\",\n  lastUpdate: \"2020-12-01T08:55:33.421Z\",\n  updateAfterDays: 30,\n};\n\n// state, setstate then render\nconst Detail = ({}) => {\n  useEffect(() => {\n    window\n      .fetch(\"/api/account\")\n      .then((res) => res.json())\n      .then(console.log);\n  }, []);\n\n// const Detail = () => {\n  // const [account, setAccount] = useState({});\n\n  // useEffect(() => {\n  //   axios\n  //     .get(\"../pages/api/account\")\n  //     .then((response) => setAccount(response))\n  //     .then(console.log());\n  // }, []);\n\n  // console.log(account)\n\n  let mortgage;\n  const lastUpdate = new Date(account.lastUpdate);\n  if (account.associatedMortgages.length) {\n    mortgage = account.associatedMortgages[0];\n  }\n\n  return (\n    <Inset>\n      <AccountSection>\n        <AccountLabel>Estimated Value</AccountLabel>\n        <AccountHeadline>\n          {new Intl.NumberFormat(\"en-GB\", {\n            style: \"currency\",\n            currency: \"GBP\",\n          }).format(account.recentValuation.amount)}\n        </AccountHeadline>\n        <AccountList>\n          <InfoText>\n            {`Last updated ${format(lastUpdate, \"do MMM yyyy\")}`}\n          </InfoText>\n          <InfoText>\n            {`Next update ${format(\n              add(lastUpdate, { days: account.updateAfterDays }),\n              \"do MMM yyyy\"\n            )}`}\n          </InfoText>\n        </AccountList>\n      </AccountSection>\n      <AccountSection>\n        <AccountLabel>Property details</AccountLabel>\n        <RowContainer>\n          <AccountList>\n            <InfoText>{account.name}</InfoText>\n            <InfoText>{account.bankName}</InfoText>\n            <InfoText>{account.postcode}</InfoText>\n          </AccountList>\n        </RowContainer>\n      </AccountSection>\n      {mortgage && (\n        <AccountSection>\n          <AccountLabel>Mortgage</AccountLabel>\n          <RowContainer\n            // This is a dummy action\n            onClick={() => alert(\"You have navigated to the mortgage page\")}\n          >\n            <AccountList>\n              <InfoText>\n                {new Intl.NumberFormat(\"en-GB\", {\n                  style: \"currency\",\n                  currency: \"GBP\",\n                }).format(\n                  Math.abs(account.associatedMortgages[0].currentBalance)\n                )}\n              </InfoText>\n              <InfoText>{account.associatedMortgages[0].name}</InfoText>\n            </AccountList>\n          </RowContainer>\n        </AccountSection>\n      )}\n      <AccountSection>\n        <AccountLabel>Valuation Changes</AccountLabel>\n        <RowContainer>\n          <AccountList>\n            <InfoText>\n              Purchased for&nbsp;<strong>Â£199,500</strong>&nbsp; on the&nbsp;\n              {formatDate({ account })}{\" \"}\n            </InfoText>\n            <InfoText>\n              Since purchase&nbsp;\n              <strong>\n                {sincePurchased(account)} {sincePurchasedPercentage(account)}\n              </strong>\n            </InfoText>\n            <InfoText>\n              Annual Appreciation&nbsp;\n              <strong>{annualAppreciation(account)}</strong>\n            </InfoText>\n          </AccountList>\n        </RowContainer>\n      </AccountSection>\n      <Button\n        // This is a dummy action\n        onClick={() => alert(\"You have navigated to the edit account page\")}\n      >\n        Edit account\n      </Button>\n    </Inset>\n  );\n};\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}